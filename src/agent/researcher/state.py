"""State of the researcher graph / agent."""
# pylint: disable=wrong-import-position
import os
import sys
from typing import Annotated
from pydantic import BaseModel, Field
from langchain_core.documents import Document
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "../../../")))
from src.utils import reduce_docs


class QueryState(BaseModel):
    """Private state for the retrieve_documents node in the researcher graph."""

    query: str = Field(description="The query string.")
    collections: list[str] = Field(
        description="The list of collection to search in, at most 2 collections."
    )


class GeneratedQueries(BaseModel):
    """Response of the generate queries tool."""

    queries: list[QueryState] = Field(
        default_factory=list,
        description=("The list of generated search queries and its corresponding collection names, "
                    "at most 3 queries and 2 collections to search in for each query."),
    )


class ResearcherState(BaseModel):
    """State of the researcher graph / agent."""

    step: str = Field(
        default="",
        description="A step in the research plan generated by the retriever agent.",
    )
    collections: list[str] = Field(
        default_factory=list,
        description="The list of collection populated from the router node.",
    )
    queries: list[QueryState] = Field(
        default_factory=list,
        description=(
            "A list of search queries and its corresponding collections, "
            "generated by the generate queries tool based on a single research step."
        )
    )
    documents: Annotated[list[Document], reduce_docs] = Field(
        default_factory=list,
        description=(
            "Populated by the retriever. "
            "This is a list of documents that the agent can reference."
        ),
    )
